import type { NextPage, GetServerSideProps } from "next";
import Head from "next/head";
import { PrismaClient, Contact, Prisma } from "@prisma/client";
import { useState } from "react";
import CreateContactForm from "./../components/CreateContactForm";
import ContactCard from "./../components/ContactCard";

interface InitialProps {
  initialContacts: [];
  appName: string;
}

// Create new instnace of prisma client
const prisma = new PrismaClient();

// export const getServerSideProps = async () => {
export const getServerSideProps: GetServerSideProps = async () => {
  // Get contacts list from `contact` table
  const contacts: Contact[] = await prisma.contact.findMany();

  return {
    props: {
      initialContacts: contacts,
      appName: process.env.APP_NAME,
    },
  };
};

async function saveContact(contact: Prisma.ContactCreateInput) {
  try {
    const response = await fetch("/api/contacts", {
      method: "POST",
      body: JSON.stringify(contact),
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
    });

    if (!response.ok) {
      throw new Error(response.statusText);
    }
    
    return await response.json();
  } catch (err) {
    console.error(err);
  }
}

const Home: NextPage<InitialProps> = ({ initialContacts, appName }: any) => {
  const [contacts, setContacts] = useState(initialContacts);
  const [applicationName, setAppName] = useState(appName);

  return (
    <>
      <Head>
        <title>{applicationName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex">
        <section className="w-1/3 h-screen p-8 bg-gradient-to-r from-red-200 via-red-300 to-yellow-200">
          <div className="mb-3">
            <h2 className="text-3xl text-white">Create Contact</h2>
          </div>
          <CreateContactForm
            onSubmit={async (data: any, e: any) => {
              try {
                await saveContact(data);
                setContacts([...contacts, data]);
                e.target.reset();
              } catch (err) {
                console.log(err);
              }
            }}
          />
        </section>
        <section className="w-2/3 h-screen p-8 bg-gradient-to-r from-rose-100 to-teal-100">
          <div className="mb-3">
            <h2 className="text-3xl text-gray-700">Contacts List</h2>
          </div>
          {contacts.map((contact: any, i: number) => (
            <div className="mb-3" key={i}>
              <ContactCard contact={contact} />
            </div>
          ))}
        </section>
      </div>
    </>
  );
};

export default Home;
